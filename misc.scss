/**
 * prefix: m_
 */


/**
 * Navigationbar layout
 *
 * @param pixels $height
 */
@mixin m_navbar($height: h_calculate_rem(64px), $fixed: false) {
    display: block;
    width: 100%;
    height: $height;

    @if ($fixed) {
        position: fixed;
        top: 0;
        left: 0;
    }

    &, ul {
        box-sizing: border-box;
    }

    ul, li, a {
        display: inline-block;
        height: 100%;
    }

    ul {
        list-style: none;

        li {
            a {
                display: inline-block;
                height: 100%;
                line-height: $height;
                text-decoration: none;
            }
        }
    }
}

/**
 * Overlay, can be used for background images etc.
 *
 * @param color $background-color
 * @param color $color
 */
@mixin m_overlay($background-color: rgba(0, 0, 0, 0.6), $color: white) {
    @include m_center();
    width: 100%;
    height: 100%;
    background-color: $background-color;
    color: $color;
}

/**
 * Hero with support for background-image.
 * Can be used for sliders etc.
 *
 * @param pixels $height
 * @param bool $fixed-background 
 */
@mixin m_hero($height: 640px, $fixed-background: false) {
    @include h_background-size_cover();
    background-position: center;
    width: 100%;
    height: $height;

    @if ($fixed-background) {
        background-attachment: fixed;
    }
}

/**
 * Make content inside DOM centered
 *
 * @param bool $horizontal
 * @param bool $vertical
 */
@mixin m_center($horizontal: true, $vertical: true) {
    @include h_display_flex();

    flex-wrap: wrap;
    flex-direction: column;

    @if ($horizontal) {
        justify-content: center;
    }

    @if ($vertical) {
        align-items: center;
    }
}

/**
 * Similar to m_center, but old way of doing it.
 * (without flexbox)
 *
 * @param bool $horizontal
 * @param bool $vertical
 */
@mixin m_center_old($horizontal: true, $vertical: true) {
    @if ($vertical) {
        display: inline-table;

        & > * {
            display: table-cell;
            vertical-align: middle;
        }
    }

    &, & > * {
        @if ($horizontal) {
            text-align: center;
        } @else {
            text-align: left;
        }
    }
}

/**
 * Center an item that is either fixed or absolute.
 *
 * @param bool $horizontal
 * @param bool $vertical
 */
@mixin m_center_absolute($horizontal: true, $vertical: true) {
    @if ($horizontal) {
        left: 0;
        right: 0;
        margin-left: auto;
        margin-right: auto;
    }

    @if ($vertical) {
        top: 0;
        bottom: 0;
        margin-top: auto;
        margin-bottom: auto;
    }
}

@mixin m_split($x: true, $y: false) {
    @include h_display_flex();

    @if ($x) {
        flex-direction: column;
    }

    @if ($y) {
        flex-direction: row;

        & > * {
            flex: 1;
        }

        @include bp_medium() {
            flex-direction: column;
            display: block;

            & > * {
                width: 100%;
            }
        }
    }
}

/**
 * Completely hide DOM
 */
@mixin m_hide() {
    display: none;
    opacity: 0;
}

/**
 * Makes a DOM the same size as the window
 */
@mixin m_fullscreen() {
    width: 100%;
    height: 100vh;
}

/**
 * Make DOM overlay screen,
 * it will also follow when scrolling
 */
@mixin m_screen_overlay() {
    @include m_fullscreen();

    position: fixed;
    left: 0;
    top: 0;
    z-index: 100;
}

/**
 * Remove default styles from buttons, inputs, selects etc...
 */
@mixin m_unstyle() {
    -webkit-appearance: none;
    border-radius: 0;
    outline: none;
    border: none;
    display: inline-block;
}

/**
 * Remove unwanted CSS rules
 */
@mixin m_reset() {
    margin: 0;
    padding: 0;
}

/**
 * Remove unwanted CSS rules from everything
 */
@mixin m_reset_all() {
    * {
        @include m_reset();
    }
}

/**
 * Cross-browser transition
 */
@mixin m_transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

/**
 * Used to limit the site width.
 *
 * @param pixels $max-width
 */
@mixin m_sitecontent($max-width: 1920px) {
    max-width: h_calculate_rem($max-width);
    margin-left: auto;
    margin-right: auto;
}

/**
 * Typography type: 0
 */
@mixin m_typography_0() {
    h1 {
        @include h_font-size(34px);
        font-weight: 300;
        line-height: h_calculate_rem(40px);
        margin: 0 0 16px;
    }

    h2 {
        @include h_font-size(24px);
        font-weight: 300;
        line-height: h_calculate_rem(32px);
        margin: 0 0 14px;
    }

    p {
        @include h_font_size(15px);
        font-weight: 400;
        line-height: h_calculate_rem(24px);
        margin: 0 0 h_calculate_rem(14px);
    }

    a {
        text-decoration: none;
    }

    a:hover {
        text-decoration: none;
    }
}
